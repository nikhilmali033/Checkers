{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nconst sqrCnt = 64;\nexport class Checkers {\n  constructor(board = [], pieces = {}) {\n    this.pieces = {};\n    this.board = [];\n    if (board.length === 0) {\n      let sqrs = [];\n      for (let i = 0; i < sqrCnt; i++) {\n        const isBlack = Math.floor(i / 8) % 2 === 0 && i % 8 % 2 === 0 || Math.floor(i / 8) % 2 === 1 && i % 8 % 2 === 1;\n        let obj = {\n          id: i,\n          x: i % 8,\n          y: Math.floor(i / 8),\n          coord: `(${i % 8}, ${Math.floor(i / 8)})`,\n          space_color: isBlack ? 'black' : 'red'\n        };\n        if (obj.y < 3 && !isBlack) {\n          obj.piece = this.createPiece(i % 8, Math.floor(i / 8), true);\n        } else if (obj.y > 4 && isBlack) {\n          obj.piece = this.createPiece(i % 8, Math.floor(i / 8), false);\n        }\n        sqrs.push(obj);\n      }\n      this.board = sqrs;\n    } else {\n      this.board = board;\n      this.pieces = pieces;\n    }\n  }\n  createPiece(x, y, isBlack = false) {\n    const id = uuidv4();\n    this.pieces[id] = {\n      id,\n      x,\n      y,\n      isBlack: isBlack,\n      isKing: false\n    };\n    return id;\n  }\n  checkSpace(x, y) {\n    return Object.values(this.pieces).find(p => p.x === x && p.y === y);\n  }\n  getValidMoves(id) {\n    const p = this.pieces[id];\n    console.log(p);\n    let validMoves = new Set();\n    let toCheck = [{\n      dx: 1,\n      dy: 1\n    }, {\n      dx: -1,\n      dy: 1\n    }, {\n      dx: 1,\n      dy: -1\n    }, {\n      dx: -1,\n      dy: -1\n    }]; //p.isKing ? [{dx: 1, dy: 1}, {dx: -1, dy: -1}, {dx: 1, dy: -1}, {dx: -1, dy: -1}] : (p.isBlack ? [{dx: 1, dy: 1}, {dx: -1, dy: 1}] : [{dx: 1, dy: -1}, {dx: -1, dy: -1}]);\n    toCheck.forEach(x => {\n      if (p.x + x.dx <= 7 && p.y + x.dy <= 7 && p.x + x.dx >= 0 && p.y + x.dy >= 0) {\n        const check = this.checkSpace(p.x + x.dx, p.y + x.dy);\n        if (check != null) {\n          if (check.isBlack !== p.isBlack) {\n            if (p.x + 2 * x.dx <= 7 && p.y + 2 * x.dy <= 7 && p.x + 2 * x.dx >= 0 && p.y + 2 * x.dy >= 0) {\n              if (this.checkSpace(p.x + 2 * x.dx, p.y + 2 * x.dy) === null) {\n                validMoves.add(`(${p.x + 2 * x.dx}, ${p.y + 2 * x.dy})`);\n              }\n            }\n          }\n        } else {\n          validMoves.add(`(${p.x + x.dx}, ${p.y + x.dy})`);\n        }\n      }\n    });\n    return validMoves;\n  }\n  movePiece(space, id) {\n    const lastSpace = this.board.find(x => x.piece === id);\n    console.log(lastSpace);\n    lastSpace.piece = null;\n    const dx = this.board[space].x - lastSpace.x;\n    if (Math.abs(dx) === 2) {\n      const dy = this.board[space].y - lastSpace.y;\n    }\n    this.board[space].piece = id;\n  }\n}","map":{"version":3,"names":["v4","uuidv4","sqrCnt","Checkers","constructor","board","pieces","length","sqrs","i","isBlack","Math","floor","obj","id","x","y","coord","space_color","piece","createPiece","push","isKing","checkSpace","Object","values","find","p","getValidMoves","console","log","validMoves","Set","toCheck","dx","dy","forEach","check","add","movePiece","space","lastSpace","abs"],"sources":["/Users/mbranni03/Documents/GitHub/Checkers/frontend/src/Game.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst sqrCnt = 64;\nexport class Checkers {\n    pieces = {};\n    board = [];\n\n    constructor(board = [], pieces = {}) {\n        if (board.length === 0) {\n            let sqrs = [];\n            for (let i = 0; i < sqrCnt; i++) {\n                const isBlack = (Math.floor(i/8) % 2 === 0 && (i % 8) % 2 === 0) || (Math.floor(i/8) % 2 === 1 && (i % 8) % 2 === 1);\n                let obj = {\n                    id: i,\n                    x: i % 8,\n                    y: Math.floor(i / 8),\n                    coord: `(${i % 8}, ${Math.floor(i / 8)})`,\n                    space_color: isBlack ? 'black' : 'red',\n                };\n                if (obj.y < 3 && !isBlack) {\n                    obj.piece = this.createPiece(i % 8, Math.floor(i / 8), true);\n                } else if (obj.y > 4 && isBlack) {\n                    obj.piece = this.createPiece(i % 8, Math.floor(i / 8), false);\n                }\n                sqrs.push(obj);\n            }\n            this.board = sqrs;  \n        } else {\n            this.board = board;\n            this.pieces = pieces;\n        }\n    }\n\n    createPiece(x, y, isBlack=false) {\n        const id = uuidv4();\n        this.pieces[id] = {\n          id,\n          x,\n          y,\n          isBlack: isBlack,\n          isKing: false,\n        }\n        return id;\n    }\n\n    checkSpace(x, y) {\n        return Object.values(this.pieces).find((p) => p.x === x && p.y === y);\n      }\n    \n    getValidMoves(id) {\n        const p = this.pieces[id];\n        console.log(p);\n        let validMoves = new Set();\n        let toCheck = [{dx: 1, dy: 1}, {dx: -1, dy: 1}, {dx: 1, dy: -1}, {dx: -1, dy: -1}]; //p.isKing ? [{dx: 1, dy: 1}, {dx: -1, dy: -1}, {dx: 1, dy: -1}, {dx: -1, dy: -1}] : (p.isBlack ? [{dx: 1, dy: 1}, {dx: -1, dy: 1}] : [{dx: 1, dy: -1}, {dx: -1, dy: -1}]);\n        toCheck.forEach((x) => {\n          if (p.x + x.dx <= 7 && p.y + x.dy <= 7 && p.x + x.dx >= 0 && p.y + x.dy  >= 0) {\n            const check = this.checkSpace(p.x + x.dx, p.y + x.dy);\n            if (check != null) {\n              if (check.isBlack !== p.isBlack) {\n                if (p.x + (2 * x.dx) <= 7 && p.y + (2 * x.dy) <= 7 && p.x + (2 * x.dx) >= 0 && p.y + (2 * x.dy) >= 0) {\n                  if (this.checkSpace(p.x + (2 * x.dx), p.y + (2 * x.dy)) === null) {\n                    validMoves.add(`(${p.x + (2 * x.dx)}, ${p.y + (2 * x.dy)})`);\n                  }\n                }\n              }\n            } else {\n              validMoves.add(`(${p.x + x.dx}, ${p.y + x.dy})`);\n            }\n          }\n        });\n        return validMoves\n    }\n\n    movePiece(space, id) {\n        const lastSpace = this.board.find((x) => x.piece === id);\n        console.log(lastSpace)\n        lastSpace.piece = null;\n        const dx = this.board[space].x - lastSpace.x;\n        if (Math.abs(dx) === 2) {\n            const dy = this.board[space].y - lastSpace.y;\n        }\n        this.board[space].piece = id;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}